// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id         Int       @id @default(autoincrement())
  title      String
  price      Decimal
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  Category   Category? @relation(fields: [categoryId], references: [id])
  categoryId Int?
  Comment    Comment[]
  Like       Like[]
}

model Category {
  id           Int       @id @default(autoincrement())
  categoryName String
  products     Product[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  userId    Int
  User      User     @relation(fields: [userId], references: [id])
}

model Like {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  userId    Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  isLike    Boolean
  User      User     @relation(fields: [userId], references: [id])

  @@unique([userId, productId])
}

model User {
  id                      Int       @id @default(autoincrement())
  name                    String
  email                   String    @unique
  password                String 
  comments                Comment[]
  resetToken              String?
  resetTokenExpiry        DateTime?
  emailVerified           Boolean   @default(false)
  confirmationToken       String?
  confirmationTokenExpiry DateTime?
  likes                   Like[]
  createdAt               DateTime  @default(now())
  updatedAt               DateTime  @updatedAt
}
